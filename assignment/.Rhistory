as.vector(mdf[1, ])
names(mdf) <- mdf[1, ]
as.vector(mdf[1, ])
as.character(mdf[1, ])
m <- cbind(
data.frame(metric = c("mean", "min", "max", "sd", "sdlower", "sdupper")),
apply(df.d, 2, function(x) c(mean(x), min(x), max(x), sd(x), mean(x)-sd(x), mean(x)+sd(x)))
)
mdf <- as.data.frame(t(m))
mdf
names(mdf)
str(mdf)
mdf[1, ]
mdf$metric <- rownames(mdf)
rownames(mdf) <- NULL
mdf
str(mdf)
mdf
m <- cbind(
data.frame(measure = measures),
apply(df.d, 2, function(x) c(mean(x), min(x), max(x), sd(x), mean(x)-sd(x), mean(x)+sd(x)))
)
mdf <- as.data.frame(t(m))
mdf$measure <- rownames(mdf)
rownames(mdf) <- NULL
measures <- c("mean", "min", "max", "sd", "sdlower", "sdupper")
m <- cbind(
data.frame(measure = measures),
apply(df.d, 2, function(x) c(mean(x), min(x), max(x), sd(x), mean(x)-sd(x), mean(x)+sd(x)))
)
mdf <- as.data.frame(t(m))
mdf$measure <- rownames(mdf)
rownames(mdf) <- NULL
mdf
names(mdf) <- c("mean", "min", "max", "sd", "sdlower", "sdupper")
mdf
m <- cbind(
data.frame(measure = measures),
apply(df.d, 2, function(x) c(mean(x), min(x), max(x), sd(x), mean(x)-sd(x), mean(x)+sd(x)))
)
mdf <- as.data.frame(t(m))
mdf$measure <- rownames(mdf)
rownames(mdf) <- NULL
names(mdf) <- c("mean", "min", "max", "sd", "sdlower", "sdupper", "measure")
m
measures <- c("mean", "min", "max", "sd", "sdlower", "sdupper")
m <- cbind(
data.frame(measure = measures),
apply(df.d, 2, function(x) c(mean(x), min(x), max(x), sd(x), mean(x)-sd(x), mean(x)+sd(x)))
)
mdf <- as.data.frame(t(m))
mdf$measure <- rownames(mdf)
rownames(mdf) <- NULL
names(mdf) <- c("mean", "min", "max", "sd", "sdlower", "sdupper", "measure")
mdf
mdf[2:nrow(mdf), ]
m <- gather(df.d, key = key)
m$key <- factor(m$key)
measures <- c("mean", "min", "max", "sd", "sdlower", "sdupper")
m <- cbind(
data.frame(measure = measures),
apply(df.d, 2, function(x) c(mean(x), min(x), max(x), sd(x), mean(x)-sd(x), mean(x)+sd(x)))
)
mdf <- as.data.frame(t(m))
mdf$measure <- rownames(mdf)
rownames(mdf) <- NULL
names(mdf) <- c("mean", "min", "max", "sd", "sdlower", "sdupper", "measure")
mdf <- mdf[2:nrow(mdf), ]
mdf
ggplot(data = mdf, aes(x = measure)) +
geom_boxplot(aes(lower = mean - sd, upper = mean + sd, middle = mean, ymin = min, ymax = max), stat = "identity")
ggplot(myboxplot, aes(x = factor(cyl))) + geom_boxplot(aes(lower = mean - sd, upper = mean + sd, middle = mean, ymin = min, ymax = max), stat = "identity")
ggplot(data = mdf, aes(x = factor(measure)) +
geom_boxplot(aes(lower = mean - sd, upper = mean + sd, middle = mean, ymin = min, ymax = max), stat = "identity")
ggplot(data = mdf, aes(x = factor(measure)) +
geom_boxplot(aes(lower = mean - sd, upper = mean + sd, middle = mean, ymin = min, ymax = max), stat = "identity"))
ggplot(myboxplot, aes(x = factor(cyl))) + geom_boxplot(aes(lower = mean - sd, upper = mean + sd, middle = mean, ymin = min, ymax = max), stat = "identity")
ggplot(data = mdf, aes(x = factor(measure)) +
geom_boxplot(aes(lower = mean - sd, upper = mean + sd, middle = mean, ymin = min, ymax = max), stat = "identity"))
ggplot(myboxplot, aes(x = factor(cyl))) + geom_boxplot(aes(lower = mean - sd, upper = mean + sd, middle = mean, ymin = min, ymax = max), stat = "identity")
ggplot(data = mdf, aes(x = factor(measure)) +
geom_boxplot(aes(lower = mean - sd, upper = mean + sd, middle = mean, ymin = min, ymax = max), stat = "identity"))
ggplot(data = mdf, aes(x = factor(measure)) +
geom_boxplot(aes(lower = sdlower, upper = sdupper, middle = mean, ymin = min, ymax = max), stat = "identity"))
ggplot(myboxplot, aes(x = factor(cyl))) + geom_boxplot(aes(lower = sdlower, upper = sdupper, middle = mean, ymin = min, ymax = max), stat = "identity")
ggplot(data = mdf, aes(x = factor(measure)) +
geom_boxplot(aes(lower = sdlower, upper = sdupper, middle = mean, ymin = min, ymax = max), stat = "identity"))
ggplot(data = mdf, aes(x = factor(measure))) +
geom_boxplot(aes(lower = sdlower, upper = sdupper, middle = mean, ymin = min, ymax = max), stat = "identity"))
ggplot(data = mdf, aes(x = factor(measure))) +
geom_boxplot(aes(lower = sdlower, upper = sdupper, middle = mean, ymin = min, ymax = max), stat = "identity")
ggplot(myboxplot, aes(x = factor(cyl))) + geom_boxplot(aes(lower = sdlower, upper = sdupper, middle = mean, ymin = min, ymax = max), stat = "identity")
m <- gather(df.d, key = key)
m$key <- factor(m$key)
measures <- c("mean", "min", "max", "sd", "sdlower", "sdupper")
m <- cbind(
data.frame(measure = measures),
apply(df.d, 2, function(x) c(mean(x), min(x), max(x), sd(x), mean(x)-sd(x), mean(x)+sd(x)))
)
mdf <- as.data.frame(t(m))
mdf$measure <- rownames(mdf)
rownames(mdf) <- NULL
names(mdf) <- c("mean", "min", "max", "sd", "sdlower", "sdupper", "measure")
mdf <- mdf[2:nrow(mdf), ]
ggplot(data = mdf, aes(x = factor(measure))) +
geom_boxplot(aes(lower = sdlower, upper = sdupper, middle = mean, ymin = min, ymax = max), stat = "identity")
ggplot(data = mdf, aes(x = measure)) +
geom_boxplot(aes(lower = sdlower, upper = sdupper, middle = mean, ymin = min, ymax = max), stat = "identity")
ggplot(data = mdf, aes(x = measure)) +
ylab("Value") +
geom_boxplot(aes(lower = sdlower, upper = sdupper, middle = mean, ymin = min, ymax = max), stat = "identity")
mdf
warnings()
ggplot(data = mdf, aes(x = measure)) +
ylab("Value") +
geom_boxplot(aes(lower = sdlower, upper = sdupper, middle = mean), stat = "identity")
ggplot(data = mdf, aes(x = measure)) +
ylab("Value") +
geom_boxplot(aes(lower = sdlower, upper = sdupper, middle = mean, ymin = min, ymax = max), stat = "identity")
mdf
ggplot(data = mdf, aes(x = measure)) +
ylab("Value") +
geom_boxplot(aes(lower = sdlower, upper = sdupper, middle = mean, ymin = min, ymax = max), stat = "identity", show_legend = TRUE)
```
ggplot(data = mdf, aes(x = measure)) +
ylab("Value") +
geom_boxplot(aes(lower = sdlower, upper = sdupper, middle = mean, ymin = min, ymax = max), stat = "identity", show_legend = TRUE)
ggplot(data = mdf, aes(x = measure)) +
ylab("Value") +
geom_boxplot(aes(lower = sdlower, upper = sdupper, middle = mean, ymin = min, ymax = max), stat = "identity", show.legend = TRUE)
mdf
ggplot(data = mdf, aes(x = measure)) +
ylab("Value") +
geom_boxplot(aes(lower = sdlower, upper = sdupper, middle = mean, ymin = min, ymax = max), stat = "identity", show.legend = TRUE)
m <- gather(df.d, key = key)
m$key <- factor(m$key)
measures <- c("mean", "min", "max", "sd", "sdlower", "sdupper")
m <- cbind(
data.frame(measure = measures),
apply(df.d, 2, function(x) c(mean(x), min(x), max(x), sd(x), mean(x)-sd(x), mean(x)+sd(x)))
)
mdf <- as.data.frame(t(m))
mdf$measure <- rownames(mdf)
rownames(mdf) <- NULL
names(mdf) <- c("mmean", "mmin", "mmax", "sd", "sdlower", "sdupper", "measure")
mdf <- mdf[2:nrow(mdf), ]
ggplot(data = mdf, aes(x = measure)) +
ylab("Value") +
geom_boxplot(aes(lower = sdlower, upper = sdupper, middle = mmean, ymin = mmin, ymax = mmax), stat = "identity", show.legend = TRUE)
```
ggplot(data = mdf, aes(x = measure)) +
ylab("Value") +
geom_boxplot(aes(lower = sdlower, upper = sdupper, middle = mean, ymin = min, ymax = max), stat = "identity")
```
mdf
ggplot(data = mdf, aes(x = measure)) +
ylab("Value") +
geom_boxplot(aes(lower = sdlower, upper = sdupper, middle = mean, ymin = min, ymax = max), stat = "identity")
m <- gather(df.d, key = key)
m$key <- factor(m$key)
measures <- c("mean", "min", "max", "sd", "sdlower", "sdupper")
m <- cbind(
data.frame(measure = measures),
apply(df.d, 2, function(x) c(mean(x), min(x), max(x), sd(x), mean(x)-sd(x), mean(x)+sd(x)))
)
mdf <- as.data.frame(t(m))
mdf$measure <- rownames(mdf)
rownames(mdf) <- NULL
names(mdf) <- c("mean", "min", "max", "sd", "sdlower", "sdupper", "measure")
mdf <- mdf[2:nrow(mdf), ]
ggplot(data = mdf, aes(x = measure)) +
ylab("Value") +
geom_boxplot(aes(lower = sdlower, upper = sdupper, middle = mean, ymin = min, ymax = max), stat = "identity")
```
msd]
mdf
df
mpg
p <- ggplot(mpg, aes(class, hwy))
p + geom_boxplot()
mpg
df.p
df.d
df.d %>% gather(key = v)
df.d %>% gather(key = key)
df.d %>% gather()
df.g <- df.d %>% gather()
ggplot(df.g, aes(x = key, y = value)) +
geom_boxplot()
ggplot(df.g, aes(x = key, y = value)) +
geom_boxplot(aes(lower = mean() - sd()))
y <- rnorm(100)
df <- data.frame(
x = 1,
y0 = min(y),
y25 = quantile(y, 0.25),
y50 = median(y),
y75 = quantile(y, 0.75),
y100 = max(y)
)
ggplot(df, aes(x)) +
geom_boxplot(
aes(ymin = y0, lower = y25, middle = y50, upper = y75, ymax = y100),
stat = "identity"
)
df.g
summarise("mean" = mean)
df.g %>% group_by(key) %>%
summarise("mean" = mean)
df.g %>% group_by(key) %>%
summarise("mean" = mean(value))
df.g <- df.d %>% gather()
df.s <- df.g %>%
group_by(key) %>%
summarise(
"mean" = mean(value),
"min" = min(value),
"max" = max(value),
"lower" = mean(value) - sd(value),
"upper" = mean(value) + sd(value)
)
df.s
ggplot(df.g, aes(x = key, y = value)) +
geom_boxplot(aes(lower = lower
ggplot(df.g, aes(x = key, y = value)) +
geom_boxplot(aes(lower = lower))
ggplot(df.s, aes(x = key, y = value)) +
geom_boxplot(aes(lower = lower))
df.s
ggplot(df.s, aes(key)) +
geom_boxplot(aes(lower = lower))
ggplot(df.s, aes(key)) +
geom_boxplot()
df.g <- df.d %>% gather()
df.s <- df.g %>%
group_by(key) %>%
summarise(
"mean" = mean(value),
"min" = min(value),
"max" = max(value),
"lower" = mean(value) - sd(value),
"upper" = mean(value) + sd(value)
)
ggplot(df.s, aes(key)) +
geom_boxplot()
ggplot(df.s, aes(key)) +
geom_boxplot(aes(lower = lower, upper = upper, min = min, max = max, mean = mean))
ggplot(df.s, aes(key)) +
geom_boxplot(aes(lower = lower, upper = upper, ymin = min, ymax = max, mean = mean))
ggplot(df.s, aes(key)) +
geom_boxplot(aes(ymin = min, ymax = max))
ggplot(df.s, aes(key)) +
geom_boxplot(aes(ymin = min, ymax = max), stat = 'identity')
ggplot(df.s, aes(key)) +
geom_boxplot(
aes(lower = lower, ymin = min, ymax = max, upper = upper),
stat = 'identity')
ggplot(df.s, aes(key)) +
geom_boxplot(
aes(lower = lower, ymin = min, middle = mean, ymax = max, upper = upper),
stat = 'identity')
source('~/.active-rstudio-document', echo=TRUE)
ggplot(df.s, aes(key)) +
geom_boxplot(
aes(lower = lower, ymin = min, middle = mean, ymax = max, upper = upper),
stat = 'identity',
show.legend = TRUE)
ggplot(df.s, aes(key)) +
geom_boxplot(
aes(lower = lower, ymin = min, middle = mean, ymax = max, upper = upper),
stat = 'identity') +
geom_jitter()
ggplot(df.s, aes(key)) +
geom_boxplot(
aes(lower = lower, ymin = min, middle = mean, ymax = max, upper = upper),
stat = 'identity') +
geom_jitter(aes(key))
ggplot(df.s, aes(key)) +
geom_boxplot(
aes(lower = lower, ymin = min, middle = mean, ymax = max, upper = upper),
stat = 'identity') +
geom_jitter(aes(key, middle))
source('~/.active-rstudio-document', echo=TRUE)
plot(cluster_dendrogram)
data_filename <- "data/teeth.csv"
df <- read_csv(data_filename)
# the data frame without Animal column
df.d <- select(df, -Animal)
# assign row names to be the value of Animal column,
# this is later used in the dendrogram as labels
rownames(df) <- df$Animal
# hierarchical clustering
# the average method was chosen for best results
# we must first obtain a distance matrix of df.d and pass this to hclust()
hc <- hclust(dist(df.d), method = "average")
plot(hc)
data_filename <- "data/teeth.csv"
df <- read_csv(data_filename)
# the data frame without Animal column
df.d <- select(df, -Animal)
# assign row names to be the value of Animal column,
# this is later used in the dendrogram as labels
rownames(df) <- df$Animal
# hierarchical clustering
# the average method was chosen for best results
# we must first obtain a distance matrix of df.d and pass this to hclust()
hc <- hclust(dist(df.d), method = "average")
# cut the tree and group animals
cluster_membership <- cutree(hc, 12)
# colour the dendrogram
label_colours <- c(
'red', 'orange', 'grey', 'lightgreen', 'green',
'darkgreen', 'cyan', 'black', 'blue', 'violet')
colour_label <- function(n) {
if (is.leaf(n)) {
a <- attributes(n)
lc <- label_colours[cluster_membership[which(names(cluster_membership) == a$label)]]
attr(n, "nodePar") <- c(a$nodePar, lab.col = lc)
}
return(n)
}
# apply the colouring function
cluster_dendrogram <- dendrapply(as.dendrogram(hc), colour_label)
# show the dendrogram with coloured groups of animal
plot(cluster_dendrogram)
data_filename <- "data/teeth.csv"
df <- read_csv(data_filename)
# the data frame without Animal column
df.d <- select(df, -Animal)
# assign row names to be the value of Animal column,
# this is later used in the dendrogram as labels
rownames(df) <- df$Animal
# hierarchical clustering
# the average method was chosen for best results
# we must first obtain a distance matrix of df.d and pass this to hclust()
hc <- hclust(dist(df.d), method = "average")
# cut the tree and group animals
cluster_membership <- cutree(hc, 12)
# colour the dendrogram
label_colours <- c(
'red', 'orange', 'grey', 'lightgreen', 'green',
'darkgreen', 'cyan', 'black', 'blue', 'violet')
colour_label <- function(n) {
if (is.leaf(n)) {
a <- attributes(n)
lc <- label_colours[cluster_membership[which(names(cluster_membership) == a$label)]]
attr(n, "nodePar") <- c(a$nodePar, lab.col = lc)
}
return(n)
}
# apply the colouring function
cluster_dendrogram <- dendrapply(as.dendrogram(hc), colour_label)
# show the dendrogram with coloured groups of animal
plot(cluster_dendrogram)
data_filename <- "data/teeth.csv"
df <- read_csv(data_filename)
# the data frame without Animal column
df.d <- select(df, -Animal)
# assign row names to be the value of Animal column,
# this is later used in the dendrogram as labels
rownames(df) <- df$Animal
# hierarchical clustering
# the average method was chosen for best results
# we must first obtain a distance matrix of df.d and pass this to hclust()
hc <- hclust(dist(df.d), method = "average")
# cut the tree and group animals
cluster_membership <- cutree(hc, 12)
# colour the dendrogram
label_colours <- c(
'red', 'orange', 'grey', 'lightgreen', 'green',
'darkgreen', 'cyan', 'black', 'blue', 'violet')
colour_label <- function(n) {
if (is.leaf(n)) {
a <- attributes(n)
lc <- label_colours[cluster_membership[which(names(cluster_membership) == a$label)]]
attr(n, "nodePar") <- c(a$nodePar, lab.col = lc)
}
return(n)
}
# apply the colouring function
cluster_dendrogram <- dendrapply(as.dendrogram(hc), colour_label)
# show the dendrogram with coloured groups of animal
plot(cluster_dendrogram)
# read the data file
data_filename <- "data/teeth.csv"
df <- read_csv(data_filename)
# the data frame without Animal column
df.d <- select(df, -Animal)
# assign row names to be the value of Animal column,
# this is later used in the dendrogram as labels
rownames(df) <- df$Animal
# hierarchical clustering
# the average method was chosen for best results
# we must first obtain a distance matrix of df.d and pass this to hclust()
hc <- hclust(dist(df.d), method = "average")
# cut the tree and group animals
cluster_membership <- cutree(hc, 12)
# colour the dendrogram
label_colours <- c(
'red', 'orange', 'grey', 'lightgreen', 'green',
'darkgreen', 'cyan', 'black', 'blue', 'violet')
colour_label <- function(n) {
if (is.leaf(n)) {
a <- attributes(n)
lc <- label_colours[cluster_membership[which(names(cluster_membership) == a$label)]]
attr(n, "nodePar") <- c(a$nodePar, lab.col = lc)
}
return(n)
}
# apply the colouring function
cluster_dendrogram <- dendrapply(as.dendrogram(hc), colour_label)
# show the dendrogram with coloured groups of animal
plot(cluster_dendrogram)
data_filename <- "data/teeth.csv"
df <- read_csv(data_filename)
# the data frame without Animal column
df.d <- select(df, -Animal)
# assign row names to be the value of Animal column,
# this is later used in the dendrogram as labels
rownames(df) <- df$Animal
# hierarchical clustering
# the average method was chosen for best results
hc <- hclust(dist(select(df, -Animal)), method = "average")
# cut the tree and group animals
cluster_membership <- cutree(hc, 12)
# colour the dendrogram
label_colours <- c(
'red', 'orange', 'grey', 'lightgreen', 'green',
'darkgreen', 'cyan', 'black', 'blue', 'violet')
colour_label <- function(n) {
if (is.leaf(n)) {
a <- attributes(n)
lc <- label_colours[cluster_membership[which(names(cluster_membership) == a$label)]]
attr(n, "nodePar") <- c(a$nodePar, lab.col = lc)
}
return(n)
}
# apply the colouring function
cluster_dendrogram <- dendrapply(as.dendrogram(hc), colour_label)
# show the dendrogram with coloured groups of animal
plot(cluster_dendrogram)
df.d
df
df.s
df
ggplot(df.s, aes(key)) +
geom_boxplot(
aes(lower = lower, ymin = min, middle = mean, ymax = max, upper = upper),
stat = 'identity') +
ggtitle(paste0("Animals (n=", nrow(df), ", m=", ncol(df)-1))
ggplot(df.s, aes(key)) +
geom_boxplot(
aes(lower = lower, ymin = min, middle = mean, ymax = max, upper = upper),
stat = 'identity') +
ggtitle(paste0("Animals (n=", nrow(df), ", m=", ncol(df)-1), ")")
ggplot(df.s, aes(key)) +
geom_boxplot(
aes(lower = lower, ymin = min, middle = mean, ymax = max, upper = upper),
stat = 'identity') +
ggtitle(paste0("Animals (n=", nrow(df), ", m=", ncol(df)-1, ")"))
ggplot(df.s, aes(key)) +
geom_boxplot(
aes(lower = lower, ymin = min, middle = mean, ymax = max, upper = upper),
stat = 'identity') +
ggtitle(paste0("Animals (n=", nrow(df), ", m=", ncol(df)-1, ")")) +
xlab("Attribute") +
ylab("Value")
source('~/.active-rstudio-document', echo=TRUE)
df.s
df
df.s
df[, 2:ncol(df)]
df[, 2:ncol(df)] %>% gather()
ggplot(data = df[, 2:ncol(df)] %>% gather(), aes(x = value)) +
geom_point() +
facet_wrap(~ .)
ggplot(data = df[, 2:ncol(df)] %>% gather(), aes(x = value)) +
geom_bar() +
facet_wrap(~ .)
ggplot(data = df[, 2:ncol(df)] %>% gather(), aes(x = value)) +
geom_bar()
ggplot(data = df[, 2:ncol(df)] %>% gather(), aes(x = value)) +
geom_bar()
facet_wrap(. ~)
df[, 2:ncol(df)] %>% gather()
hists <- gather(df[, 2:ncol(df)])
hist
hists
hists <- gather(df[, 2:ncol(df)])
hists$key <- as.factor(hists$key)
hists
ggplot(data = df[, 2:ncol(df)] %>% gather(), aes(x = value)) +
geom_bar()
hists <- gather(df[, 2:ncol(df)])
hists$key <- as.factor(hists$key)
hists
ggplot(data = hists, aes(x = value)) +
geom_bar()
ggplot(data = hists, aes(x = value)) +
geom_bar() +
facet_wrap(~ .)
ggplot(data = hists, aes(x = value)) +
geom_bar() +
facet_grid(~ .)
df
hists
ggplot(data = hists, aes(x = value)) +
geom_bar() +
facet_grid(key ~ .)
ggplot(data = hists, aes(x = value)) +
geom_bar() +
facet_grid(. ~ key)
